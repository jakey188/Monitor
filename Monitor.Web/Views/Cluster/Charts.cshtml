@using Monitor.Models;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = " 性能监视器统计图";
}

@section scriptSrc{
<script src="http://cdn.bootcss.com/echarts/3.3.2/echarts.common.js"></script>
}
@section script{
    <script>

        $(function () {

            var cpuChart = echarts.init(document.getElementById('cpuContainer'));
            var iisChart = echarts.init(document.getElementById('iisContainer'));
            var memoryChart = echarts.init(document.getElementById('memoryContainer'));

            var vue = new Vue({
                el: '#app',
                data: {
                    pageOptions: {
                        currentPage: 1,
                        totalPages: 1,
                        alignment: "right",
                        onPageClicked: function (e, originalEvent, type, page) {
                            vue.pageOptions.currentPage = page;
                            vue.getList();
                        }
                    },
                    machineIpText: { id: '', name: '服务器IP' },
                    collectTypeText: { id: '', name: '监控类型' },
                    apiGetChartDataUrl: '@Url.Content("~/")api/GetPerformanceCounterSnapshotCharts',
                    dataList: []
                },
                ready: function () {

                },
                methods: {
                    dropdownMachineChange: function (ip) {
                        var vm = this;
                        this.machineIpText.id = ip;
                        this.machineIpText.name = ip;
                        this.pageOptions.currentPage = 1;
                        this.initChartOption();
                        setInterval(function () { vm.getChartData() }, 1000);
                    },
                    dropdownCollectTypeChange: function (type, collectName) {
                        this.collectTypeText.id = type;
                        this.collectTypeText.name = collectName;
                        this.pageOptions.currentPage = 1;
                        this.getChartData();
                    },
                    initChartOption: function () {
                        
                        // 显示标题，图例和空的坐标轴
                        cpuChart.setOption({
                            title: {
                                left: 'center',
                                text: 'CPU使用率',
                                subtext: 'CPU【max】值统计图,采集单位【秒】'
                            },
                            xAxis: {
                                data: []
                            },
                            yAxis: {
                                min: 0,
                                max: 100
                            },
                            series: [{
                                // 根据名字对应到相应的系列
                                name: 'CPU使用率',
                                smooth: true,
                                symbol: 'none',
                                stack: 'a',
                                areaStyle: {
                                    normal: {}
                                },
                                type: 'line',
                                data: []
                            }]
                        });
                        iisChart.setOption({
                            title: {
                                left: 'center',
                                text: 'IIS请求数',
                                subtext: 'IIS请求数【max】值统计图,采集单位【秒】'
                            },
                            xAxis: {
                                data: []
                            },
                            yAxis: {

                            },
                            series: [{
                                // 根据名字对应到相应的系列
                                name: 'IIS请求数',
                                smooth: true,
                                symbol: 'none',
                                stack: 'a',
                                areaStyle: {
                                    normal: {}
                                },
                                type: 'line',
                                data: []
                            }]
                        });
                        memoryChart.setOption({
                            title: {
                                left: 'center',
                                text: '内存使用',
                                subtext: '内存【max】值统计图,采集单位【秒】'
                            },
                            xAxis: {
                                offset: 10,
                                data: []
                            },
                            yAxis: {

                            },
                            series: [{
                                // 根据名字对应到相应的系列
                                name: '内存使用',
                                smooth: true,
                                symbol: 'none',
                                stack: 'a',
                                areaStyle: {
                                    normal: {}
                                },
                                type: 'line',
                                data: []
                            }]
                        });
                    },
                    getChartData: function () {
                        var vm = this;
                        $.get(vm.apiGetChartDataUrl, { ip: vm.machineIpText.id, type: vm.collectTypeText.id }, function (response) {
                            var x = [];
                            var cpu = [], iis = [], memory = [];

                            $.each(response, function (index, d) {
                                x.push(d.time);
                                cpu.push(d.cpu);
                                iis.push(d.iis);
                                memory.push(d.memory);
                            })

                            // 填入数据
                            cpuChart.setOption({
                                xAxis: {
                                    data: x
                                },
                                series: [{
                                    data: cpu
                                }]
                            });
                            iisChart.setOption({
                                xAxis: {
                                    data: x
                                },
                                series: [{
                                    data: iis
                                }]
                            });
                            memoryChart.setOption({
                                xAxis: {
                                    data: x
                                },
                                series: [{
                                    data: memory
                                }]
                            });
                        });
                    }
                }
            });
        });
</script>
}
<h1>
    性能监视器
</h1>
<ul class="breadcrumb">
    <li>
        <a href="help.htm">监控中心</a> <span class="divider">/</span>
    </li>
    <li class="active">
        性能监视器统计图
    </li>
</ul>
<div class="container">
    <div class="row">
        <div class="span12">
            <form class="form-search">
                <div class="btn-group">
                    <button class="btn" contenteditable="true">{{machineIpText.name}}</button>
                    <button data-toggle="dropdown" class="btn dropdown-toggle"><span class="caret"></span></button>
                    <ul class="dropdown-menu" contenteditable="true">
                        @{
                            var computerList = ViewBag.ComputerInfoList as List<ClusterComputerInfo>;
                        }
                        @foreach (var item in computerList)
                        {
                            <li><a v-on:click="dropdownMachineChange('@item.MachineIp')">@item.MachineIp</a></li>
                        }
                    </ul>
                </div>
                <div class="btn-group">
                    <button class="btn" contenteditable="true">{{collectTypeText.name}}</button>
                    <button data-toggle="dropdown" class="btn dropdown-toggle"><span class="caret"></span></button>
                    <ul class="dropdown-menu" contenteditable="true">
                        <li><a v-on:click="dropdownCollectTypeChange(1,'CPU')">CPU</a></li>
                        <li><a v-on:click="dropdownCollectTypeChange(2,'内存')">内存</a></li>
                        <li><a v-on:click="dropdownCollectTypeChange(5,'IIS请求数')">IIS请求数</a></li>
                    </ul>
                </div>
                <input class="input-medium search-query" type="text" /> <button type="submit" class="btn">查找</button>
            </form>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div id="cpuContainer" style="width:90%;height:300px"></div>
        <div id="iisContainer" style="width:90%;height:300px"></div>
        <div id="memoryContainer" style="width:90%;height:300px"></div>
    </div>
</div>