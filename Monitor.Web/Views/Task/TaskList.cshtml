@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = " 用户列表";
}
@section script{
    <script>
        var userInfoDialog,vue;
        $(function () {
            $('body')
                .on('click', 'input[name=rdoTypes]', function () {
                    var value = $(this).val();
                    if (parseInt(value) == 1) {
                        $('#remoteUrlDiv').hide().find('input').addClass('ignore');
                    } else {
                        $('#remoteUrlDiv').show().find('input').removeClass('ignore');
                    }
                })
                .on('click', '#userInfoSubmit', function () {
                    var btn = $(this),
                        form = $('#createTaskForm');

                    form.validate({
                        ignore: ":hidden",
                        rules: {
                            taskName: {
                                required: true
                            },
                            remoteUrl: {
                                required: true
                            },
                            cronExpressionString: {
                                required: true
                            },
                            cronRemark: {
                                required: true
                            }
                        },
                        messages: {
                            taskName: {
                                required: "请输入任务名."
                            },
                            remoteUrl: {
                                required: "任务执行api."
                            },
                            cronExpressionString: {
                                required: "请填写Cron表达式."
                            },
                            cronRemark: {
                                required: "请表达式说明."
                            }
                        },
                        submitHandler: function (form) {
                            $.ajax({
                                url: '@Url.Action("AddTask","Task")',
                                beforeSend: function () {
                                    btn.button('loading')
                                },
                                type: 'post',
                                dataType: 'json',
                                data: $('#createTaskForm').serialize(),
                                success: function (response) {
                                    if (response.s == 10006) {
                                        app.tips('操作成功', function () {
                                            userInfoDialog.close();
                                            vue.getList();
                                        });
                                    } else {
                                        app.tips(response.msg);
                                    }
                                },
                                complete: function () {
                                    btn.button('reset');
                                }
                            })
                        }
                    });
                })

            vue = new Vue({
                el: '#app',
                data: {
                    total: 0,
                    pageSize: 10,
                    taskName:'',
                    pageOptions: {
                        currentPage: 1,
                        bootstrapMajorVersion: 1,
                        totalPages: 1,
                        alignment: "right",
                        onPageClicked: function (e, originalEvent, type, page) {
                            vue.pageOptions.currentPage = page;
                            vue.getList();
                        }
                    },
                    apiGetListUrl: '@Url.Action("GetTaskList","Task")',
                    apiDeleteUrl: '@Url.Action("DeleteTask","Task")',
                    dataList: []
                },
                ready: function () {
                    this.getList();
                },
                methods: {
                    openUserDialog: function (id) {
                        var vm = this;
                        id = id || '';
                        userInfoDialog = app.dialog({
                            title: '任务信息',
                            nl2br: false,
                            message: $('<div></div>').load('@Url.Action("TaskDetails","Task")?taskId=' + id)
                        });
                    },
                    del: function (taskId) {
                        var vm = this;
                        app.confirm("确认要删除该任务吗？", function (result) {
                            if (result) {
                                $.get('@Url.Action("DeleteTask","Task")?taskId=' + taskId, function (response) {
                                    if (response.s == 10006) {
                                        app.tips("删除成功", function () {
                                            vm.getList();
                                        })
                                    } else {
                                        app.tips(response.msg);
                                    }
                                });
                            }
                        })
                    },
                    updateStatus: function (taskId,status) {
                        var vm = this;
                        var msg = '确认要停止该任务吗';
                        if (parseInt(status) == 1) {
                            msg = "确认要开启该任务吗?"
                        }
                        app.confirm(msg, function (result) {
                            if (result) {
                                $.get('@Url.Action("UpdateTaskStatus","Task")?taskId=' + taskId + "&status="+status, function (response) {
                                    if (response.s == 10006) {
                                        app.tips("操作成功", function () {
                                            vm.getList();
                                        })
                                    } else {
                                        app.tips(response.msg);
                                    }
                                });
                            }
                        })
                    }
                    ,
                    edit: function (id) {
                        this.openUserDialog(id);
                    },
                    search: function () {
                        this.getList();
                    },
                    getList: function () {
                        var vm = this;
                        $.ajax({
                            url: vm.apiGetListUrl,
                            beforeSend: function () {
                                loading();
                            },
                            type: 'get',
                            dataType: 'json',
                            data: {
                                pageIndex: vm.pageOptions.currentPage,
                                pageSize: vm.pageSize,
                                taskName: vm.taskName
                            },
                            success: function (response) {
                                if (response.s === 10006) {
                                    vm.dataList = response.data;
                                    vm.total = response.count;
                                    if (vm.total > vm.pageSize) {
                                        vm.pageOptions.totalPages = getTotalPage(response.count, response.pgSize);
                                        $('.pagination').bootstrapPaginator(vm.pageOptions);
                                    } else {
                                        $('.pagination').html('');
                                    }
                                }

                            },
                            complete: function () {
                                loading(false);
                            }
                        })
                    }
                }
            });
        });
    </script>
}
@section scriptSrc{
    <script src="~/Statics/js/bootstrap-paginator.js"></script>
    <script src="~/Statics/js/jquery.validate.min.js"></script>
    <script src="~/Statics/js/jquery.validate.bootstrap.js"></script>
}
<div class="container-fluid">
    <div class="info-center">
        <div class="page-header">
            <div class="pull-left">
                <h4>列表信息</h4>
            </div>
        </div>
        <div class="search-box row">
            <div class="col-md-8">

                <div class="form-group">
                    <input class="form-control" type="text" v-model="taskName" placeholder="任务名" />
                </div>

                <div class="form-group btn-search">
                    <button class="btn btn-primary" v-on:click="search()"><span class="glyphicon glyphicon-search"></span> 搜索</button>
                </div>
            </div>
            <div class="col-md-4">
                <div class="btn-group pull-right" role="group" aria-label="...">
                    <button type="button" v-on:click="openUserDialog()" class="btn btn-default"><span class="glyphicon glyphicon-plus"></span> 新增</button>
                    @*<div class="btn-group" role="group">
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="glyphicon glyphicon-edit"></span> 审核
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a href="#">通过</a></li>
                                <li><a href="#">不通过</a></li>
                            </ul>
                        </div>
                        <button type="button" class="btn btn-default"><span class="glyphicon glyphicon-pencil"></span> 编辑</button>
                        <button type="button" class="btn btn-default"><span class="glyphicon glyphicon-trash"></span> 删除</button>*@
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="table-margin table-responsive">
            <table class="table table-bordered table-header table-hover">
                <thead>
                    <tr>
                        <th>
                            任务TaskId
                        </th>
                        <th>
                            任务名
                        </th>
                        <th>
                            运行频率
                        </th>
                        <th>
                            任务状态
                        </th>
                        <th>
                            最近运行时间
                        </th>
                        <th>
                            下次运行时间
                        </th>
                        <th>
                            创建时间
                        </th>
                        <th>
                            说明
                        </th>
                        <th>
                            操作
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="item in dataList">
                        <td>
                            {{item.taskId}}
                        </td>
                        <td>
                            {{item.taskName}}
                        </td>
                        <td>
                            {{item.cronRemark}}
                        </td>
                        <td>
                            {{item.status == 1 ? "运行中" : "已停止"}}
                        </td>
                        <td>
                            {{item.recentRunTime}}
                        </td>
                        <td>
                            {{item.nextFireTime}}
                        </td>
                        <td>
                            {{item.createdTime}}
                        </td>
                        <td>
                            {{item.remark}}
                        </td>
                        
                        <td>
                            <button type="button" v-on:click="del(item.taskId)" class="btn btn-danger btn-xs"><span class="glyphicon glyphicon-remove"></span>删除</button>
                            <button type="button" v-on:click="edit(item.taskId)" class="btn btn-info btn-xs"><span class="glyphicon glyphicon-pencil"></span>编辑</button>
                            <button type="button" v-on:click="updateStatus(item.taskId,1)" class="btn btn-success  btn-xs"><span class="glyphicon glyphicon-circle"></span>开始</button>
                            <button type="button" v-on:click="updateStatus(item.taskId,0)" class="btn btn-default  btn-xs"><span class="glyphicon glyphicon-off"></span>停止</button>
                        </td>
                    </tr>
                </tbody>
                <tfoot v-show="total>pageSize">
                    <tr>
                        <td colspan="6">
                            <div class="pull-right">
                                <nav>
                                    <div class="pagination pagination-right"></div>
                                </nav>
                            </div>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>